
# python file

snippet #!
#!/usr/bin/${1:python}
# encoding: ${2:utf-8}
endsnippet

snippet todo "add a todo comment"
# TODO: $1
endsnippet

snippet p "print"
print(${1})
endsnippet

snippet for "for loop"
for ${1} in ${2}:
	${3}
endsnippet

snippet fore "for loop enumerated"
for ${1:i}, ${2} in enumerate(${3}):
	${4}
endsnippet

snippet with "with open"
with open(${1:filename}, "${2:r}") as fn:
	${3}
endsnippet

snippet try "try except"
try:
	${2}
except ${1} as e:
	${3:pass}
endsnippet

# Conditions

snippet if "if"
if ${1}:
	${2}
endsnippet

snippet ife "if else"
if ${1}:
	${2:pass}
else:
	${3:pass}
endsnippet

snippet el "elif"
elif ${1}:
	${2:pass}
endsnippet

# functions

snippet def "add function"
def ${1:func}(self, ${2:*args, **kwargs}):
	${3:pass}
endsnippet

snippet main "generate the main" b
if __name__ == "__main__":
	${1:pass}
endsnippet

# Class
snippet class "add class"
class ${1:MyClass}: 
	"""$1"""
endsnippet

snippet init "add constructor" !b
def __init__(self, ${1:*args, **kwargs}):
	""" contructor """
	$2
endsnippet

snippet str "add text method" !b
def __str__(self):
	$1
endsnippet

snippet dcalc "add calculation method" !b
def __add__(self, other):
	return self.${1:attribute} + other

def __sub__(self, other):
	return self.${1:attribute} - other

def __mul__(self, other):
	return self.${1:attribute} * other

def __truediv__(self, other):
	return self.${1:attribute} / other

def __floordiv__(self, other):
	return self.${1:attribute} // other
endsnippet

snippet attr "add attr" !b
self.${1} = $1
$2
endsnippet

snippet defs "add method to class"
def ${1:func}(self, ${2:*args, **kwargs}):
	${3:pass}
endsnippet

